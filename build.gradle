plugins {
    id 'java'
    id 'war'
    id 'io.freefair.lombok' version '8.2.2'
}

group 'ru.clevertec'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    servletVersion = '6.0.0'
    postgresqlVersion = '42.6.0'
    gsonVersion = '2.10.1'
    slf4jVersion = '2.0.7'
    logbackVersion = '1.4.11'
    snakeYamlVersion = '2.1'
    liquibaseVersion = '4.23.1'
    mapstructVersion = '1.5.3.Final'
    aspectjVersion = '1.9.20'
    junitVersion = '5.10.0'
    assertjVersion = '3.24.2'
    mockitoVersion = '5.5.0'
    memoryFileSystemVersion = '2.6.1'
}

sourceCompatibility = targetCompatibility = '17'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly "jakarta.servlet:jakarta.servlet-api:$servletVersion"

    runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"

    implementation "org.aspectj:aspectjrt:$aspectjVersion"
    implementation "org.aspectj:aspectjweaver:$aspectjVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "ch.qos.logback:logback-core:$logbackVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "org.yaml:snakeyaml:$snakeYamlVersion"
    implementation "org.liquibase:liquibase-core:$liquibaseVersion"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"

    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "com.github.marschall:memoryfilesystem:$memoryFileSystemVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

test {
    useJUnitPlatform()
}
